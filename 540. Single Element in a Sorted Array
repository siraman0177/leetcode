class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int n=nums.size();
        if (n==1) return nums[0];

        int st=0 , end=n-1;
        while (st<=end)
        {
            int mid =st+ (end-st)/2;
            if (mid==0 && nums[0]!=nums[1]) return nums[0]; // first 
            if (mid==n-1 && nums[n-1]!=nums[n-2]) return nums[mid]; // last 

            if(nums[mid]!=nums[mid-1]&& nums[mid]!=nums[mid+1]) return nums[mid]; // middle 

            if (mid%2==0)
            { //even
                if(nums[mid-1]==nums[mid]) end=mid -1; //left
                else st=mid+1; // right 
            }
            else 
            {// odd
            if (nums[mid-1]==nums[mid]) st=mid+1;
            else end=mid-1;
            }
        }
        return -1;
    }
};
